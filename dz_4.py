# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств.

# n = int(input('кол-во элементов первого множества: '))
# m = int(input('кол-во элементов второго множества: '))
#
# list_1 = [int(input('элемент первого множества: ')) for i in range(n)]
# list_2 = [int(input('элемент второго множества: ')) for j in range(m)]
#
# print(sorted(set(list_1).intersection(set(list_2))))
#
# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только
# по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте
# выросло ai ягод. В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход,
# находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
# находясь перед некоторым кустом заданной во входном файле грядки.

n = int(input('Кол-во кустов: '))
list_1 = [int(input('кол-во ягод: ')) for i in range(n)]
print(list_1)
max_gather = 0
for j in range(len(list_1)):
    if list_1[-3 + j] + list_1[-2 + j] + list_1[-1 + j] > max_gather:
        max_gather = list_1[-3 + j] + list_1[-2 + j] + list_1[-1 + j]

print(max_gather)
